class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        vector<vector<int>> adj(n);
        int count= 0;
        for(int i =0; i<isConnected.size(); i++){
            for(int j=0; j<isConnected[0].size(); j++){
                if(isConnected[i][j]==1 and i!=j){
                    adj[i].push_back(j);
                    adj[j].push_back(i);

                } 
            }
    }
      
        vector<int> vis(n);
      
        for(int i=0; i<adj.size(); i++){
            if(!vis[i]){
                count++;
                dfs(adj, i, vis);
            }
        }
      return count;
    }
    
    void dfs(vector<vector<int>> &adj, int i, vector<int> &vis){
        vis[i] = 1;
        for(auto node :  adj[i]){
            if(!vis[node]){
                vis[node] = 1;
                dfs(adj, node, vis);
            }
        }
        
        return;
    }
    
};