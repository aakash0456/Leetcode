class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int m = graph.size();
        vector<int> color(m, -1);
        for(int i=0; i<m; i++){
            if(!bfs(graph, i, color)) return false;
        }

        return true;
    }

    bool bfs(vector<vector<int>>& graph, int start, vector<int> color){
        queue<int> q;
        q.push(start);
        color[start] = 0;
        while(!q.empty()){
            int node = q.front();
            q.pop();
            for(auto it: graph[node]){
                if(color[it]==-1){
                    color[it] = !color[node];
                    q.push(it);
                }else if(color[it]==color[node]){
                    return false;
                }
            }
        }
       return true;
    }
};