/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        if(!root1 or !root2) return false;
         vector<int> r1, r2;
        r1 = func(root1, r1);
        r2 = func(root2, r2);
        return r1==r2;
    }
    
    vector<int> func(TreeNode* root, vector<int> &r){
        if(!root) return r;
        if(!root->left and !root->right) r.push_back(root->val);
        
        func(root->left, r);
        func(root->right, r);
        
        return r;
    }
};