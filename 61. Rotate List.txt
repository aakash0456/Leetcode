/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head or k==0) return head;
        ListNode* p = head;
        int len=1;
        while(p->next){len++; p=p->next;}
        
        p->next = head;
       
        k = k%len;
        cout<<k;
        if(k%=len)
            for(int i=0; i< len-k; ++i ) p=p->next;
            
        
        ListNode* temp = p->next;
        p->next = NULL;
        return temp;
    }
    
};