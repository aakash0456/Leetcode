class Solution {
public:
    int minTrioDegree(int n, vector<vector<int>>& edges) {
        vector<vector<int>> adjMat(n+1, vector<int>(n+1, 0));
        int m = adjMat.size();
        int l = adjMat[0].size();
        vector<int> degree(n+1, 0);
        int u,v;
        for(int i=0; i<edges.size(); i++)
        {
          u = edges[i][0];
          v = edges[i][1]; 
           adjMat[u][v]=1;
            adjMat[v][u]=1;
            degree[edges[i][0]]++;
            degree[edges[i][1]]++;
            
        }
        // for(int i=1; i<m; i++)
        // {
        //     for(int j=1; j<l; j++)
        //     {
        //         cout<<adjMat[i][j]<<" ";
        //     }
        //     cout<<endl;
        // }
        int total_degree=INT_MAX;
        for(int i=1; i<adjMat.size(); i++)
        {
            for(int j=i+1; j<adjMat.size(); j++ )
            {
                for(int k=j+1; k<adjMat.size(); k++)
                {
                    if(adjMat[i][j]==1 and adjMat[j][k]==1 and adjMat[k][i]==1)
                    {
                        total_degree = min(total_degree, degree[i]+degree[j]+degree[k]-6);
                    }
                }
            }
        }
        
        if(total_degree == INT_MAX)
        {
            return -1;
        }
        else
        {
            return total_degree;
        }
    }
};