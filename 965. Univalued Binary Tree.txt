/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* p;
    int flag=0;
public:
    bool isUnivalTree(TreeNode* root) {
        
        p=root;
        if(p->val==0 && p->right==NULL)
        {
            return true;
        }
        else
        {
        
            int cflag=check(p, p->val);
            if(cflag==1)
            {
                return false;
            }
            else
                return true;
        }
  
    }
    
    int check(TreeNode* p, int x)
    {
       
        
        if(p)
            {
               if(p->val!=x)
               {
                   flag=1;
                   
               }
              check(p->left,x);
              check(p->right,x);
            }
        
        
        return flag;
    }
    
};