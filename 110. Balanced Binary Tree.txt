/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        
      auto ans = check(root);
    
        return ans.second;
        
    }
    
    pair<int,bool> check(TreeNode* root)
    {
        if(root==NULL)
        {
            return {0, true};
        }
        
        pair<int, bool> left = check(root->left);
        pair<int, bool> right = check(root->right);
         int h = max(left.first, right.first) + 1;
        if(abs(left.first - right.first)<=1 and left.second==true and right.second==true)
        {
            return {h, true};
        }
        return {h, false};
    }
};