/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode * ans =NULL;
        vector<int> arr;
        int carry=0;
        
        while(l1 and l2)
        {
            int sum = 0;
            if(carry==0)
            {
                sum = l1->val + l2->val;
            }
            else
            {
                sum = l1->val + l2->val + 1;
            }
            if(sum<10)
            {
                arr.push_back(sum);
                carry=0;
            }
            else
            {
                sum = sum-10;
                arr.push_back(sum);
                carry=1;
            }
            
            l1=l1->next;
            l2=l2->next;
        }
        
       if(l1)
       {
           
         while(l1)
         {
             int sum=0;
             if(carry==1)
                 {
                     sum = l1->val+1;
                 }
             else
                 {
                     sum =l1->val;
                 }
             
             if(sum<10)
                {
                    arr.push_back(sum);
                    carry=0;
                }
            else
                {
                    sum = sum-10;
                    arr.push_back(sum);
                    carry=1;
                }
             l1=l1->next;
             
              }
            if(carry==1)
            {
                arr.push_back(1);
            }
       }
        else
        {
            
         while(l2)
         {
             int sum=0;
             if(carry==1)
                 {
                     sum = l2->val+1;
                 }
             else
                 {
                     sum =l2->val;
                 }
             
             if(sum<10)
                {
                    arr.push_back(sum);
                    carry=0;
                }
            else
                {
                    sum = sum-10;
                    arr.push_back(sum);
                    carry=1;
                }
             l2=l2->next;
             
              }
            if(carry==1)
            {
                arr.push_back(1);
            }
        }
        
//          for(auto no : arr)
//         {
//             cout<<no<<" ";
//         }
    
        ans =  buildLinkedList(ans, arr);
        
         return ans;
        
    }
    
    ListNode *buildLinkedList(ListNode *ans,vector<int> &arr)
    {
        ListNode *head, *temp;
        if(ans==NULL)
        {
            temp = new ListNode(arr[0]);
            head = temp;
        }
        
        for(int i=1; i<arr.size(); i++)
        {
            ListNode *n = new ListNode(arr[i]);
            temp->next = n;
            temp = temp->next;     
        }
        
        return head;
    }
    
};