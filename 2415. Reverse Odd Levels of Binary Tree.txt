/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        if(!root) return root;
        
        queue<TreeNode*> q;
        q.push(root);
        vector<int> values;
        int level =0;
        while(!q.empty()){
            int size = q.size();
            vector<int> temp;
            for(int i=0; i<size; i++){
                TreeNode* n = q.front();
                q.pop();
                if(level%2!=0){
                    n->val = values[size-i-1];
                }
                if(n->left) {
                    q.push(n->left);
                    temp.push_back(n->left->val);
                }
                if(n->right) {
                    q.push(n->right);
                    temp.push_back(n->right->val);
                }
                
            }
            values = temp;
                level++;
        }
        
       return root; 
    }
};