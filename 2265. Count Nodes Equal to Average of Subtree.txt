/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int totalN=0;
    int averageOfSubtree(TreeNode* root) {
        if(!root) return 0;
        
        dfs(root);
        return totalN;
    }
    void dfs(TreeNode* root){
        if(!root) return;
        int sum=0;
        int count=0;
        auto pr = avg(root, sum, count);
        if(pr.first/pr.second == root->val) totalN++;
        dfs(root->left);
        dfs(root->right);
        return;
    }

    pair<int,int> avg(TreeNode* root, int &sum, int &count){
        if(!root) return {0,0};
        sum+=root->val;
        count++;
        avg(root->left, sum, count);
        avg(root->right, sum, count);
        
        return{sum, count};
    }
    
};