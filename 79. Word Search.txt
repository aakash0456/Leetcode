class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        
        int m = board.size();
        int n = board[0].size();
        
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(dfs(board, i, j, word, m,n)) return true;
            }
        }
        return false;
    }
    
    bool dfs(vector<vector<char>> &board, int i, int j, string word, int m , int n){
        if(!word.size()) return true;
        if(i<0 or j<0 or i>=m or j>=n or board[i][j]!=word[0]) return false;
        
        char c = board[i][j];
        board[i][j] = '*';
        string s = word.substr(1);
        bool ret = dfs(board, i-1, j, s, m, n) || dfs(board, i, j+1, s, m, n) || dfs(board, i+1, j, s, m, n) || dfs(board, i, j-1, s, m, n);
        board[i][j] = c;
        
        return ret;
        
    }
};