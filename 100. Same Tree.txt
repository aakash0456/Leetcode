/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
  
        
        bool isSame = check(p, q, true);
        return isSame;
    }
    bool check(TreeNode* p, TreeNode* q, bool isSame)
    {
      
        if(p==NULL and q!=NULL)
        {
            return false;
        }
        if(p!=NULL and q==NULL)
        {
            cout<<"ccc";
            return false;
        }
          if(p==NULL and q==NULL)
        {
              cout<<"xxxx";
            return true;
        }
        
        
        if(p and q)
        {
          if(p->val!=q->val)
            {
                cout<<p->val<<" "<<q->val;
               return false; 
            }
         
        }
       
        isSame &= check(p->left, q->left, isSame);
        //cout<<isSame;
        isSame &= check(p->right, q->right, isSame);
        //cout<<isSame;
         return isSame;   
            
    }
    
};