class Solution {
public:
    int longestCommonSubsequence(string text1, string text2) {
        int n = text1.size();
        int m = text2.size();
        vector<vector<int>> dp(n+1, vector<int>(m+1, -1));
        int ans = func(text1, text2, n-1, m-1, dp);
        return ans;
    }
    int func(string &t1, string &t2, int n, int m, vector<vector<int>> &dp){
        //base
        if(n <0 or m < 0) return 0;
        if(dp[n][m]!=-1) return dp[n][m];
        //recursive
        if(t1[n]==t2[m]){
            return 1 + func(t1, t2, n-1, m-1, dp);
        }
        int ans = max(func(t1, t2, n-1, m, dp), func(t1,t2, n, m-1, dp));
        return dp[n][m] = ans;
    }
};