class Solution {
public:
    vector<vector<int>> ans;
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        

    int sum=0;
    int i=0;
    vector<int> op;
    find_SumSubsets(candidates, target, 0 , sum, op);
        
        return ans;
        
    }
    
 void find_SumSubsets(vector<int> arr, int target, int i, int sum, vector<int> op)
{
    if(sum==target)
    {
        ans.push_back(op);
        return;
    }
    if(sum>target)
    {
       return;
    }
    if(i==arr.size())
    {
        //ans.push_back(op);
        return ;
    }
    op.push_back(arr[i]);
    sum+=arr[i];
    find_SumSubsets(arr,target,i, sum , op);
     op.pop_back();
     sum-=arr[i];
    i = i+1;
    find_SumSubsets(arr,target,i, sum, op);
   
    return;
}
    
};