class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        for(int i=0; i<mat.size(); i++){
            auto v = mat[i];
            int sum = accumulate(v.begin(), v.end(), 0);
            pq.push({sum , i});
        }
        vector<int> ans;
        while(k-- and !pq.empty()){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};