/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sum=0;
    int deepestLeavesSum(TreeNode* root) {
        int maxh = 0;
        dfs(root, 0, maxh);
        return sum;
    }
    
    void dfs(TreeNode* root, int depth, int &maxh){
        if(!root) return;
        
        dfs(root->left, depth + 1, maxh);
        dfs(root->right, depth + 1, maxh);
        
        if(maxh <= depth){
            int lastsum = sum;
            if(depth> maxh) sum-=lastsum;
            maxh = depth;
            sum+=root->val;
        }
        
        return;
    }
};