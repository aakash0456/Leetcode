class Solution {
public:
    int uniquePaths(int m, int n) {
       vector<vector<int>> dp(110, vector<int>(110, -1));
       int ans =  func(0, 0, m ,n, dp);
       return ans;
    }
bool check(int i, int j, int m ,int n){
    if(i>=0 and i<m and j>=0 and j<n) return true;
    return false;
}

    int func(int i, int j, int m ,int n, vector<vector<int>> &dp){
        if(!check(i, j, m ,n)) return 0;
        if(i==m-1 and j==n-1) {
          return 1;
        }
        if(dp[i][j]!=-1) return dp[i][j];

        int dx[] = {0, 1};
        int dy[] = {1, 0};
        int ans = 0;
        for(int idx=0; idx<2; idx++){
            int new_idx = i + dx[idx];
            int new_idy = j + dy[idx];

            ans += func(new_idx, new_idy, m ,n, dp);

        }

        return dp[i][j] = ans;

    }
};