/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* p, *q;
        p=head;
        int i=0;
        if(head==0)
        {
            return head;
        }
        else{
        while(p)
        {
            i++;
            p=p->next;
        }
       // cout<<i;
        p=head;
        int A[i], j=0;
        while(p)
        {
            A[j]=p->val;
            p=p->next;
           j++;
        }
     /*   for(int j=0; j<i; j++)
    {
       cout<<A[j]<<'\t';
      
    }*/
        j--;
        p=head;
      while(p)
        {
            p->val=A[j--];
            p=p->next;
        }
        
        return head;
        }
    }
};