/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count=0;
    int pathSum(TreeNode* root, int targetSum) {
        
        vector<int> ans;
        check(root, targetSum, ans);
        
        return count;
    }
    
    
    void check(TreeNode* root, int targetSum, vector<int> ans)
    {
        if(root==NULL)
        {
            return;
        }
        
        
        ans.push_back(root->val);
        
        check(root->left, targetSum, ans);
        check(root->right, targetSum, ans);
            long  int temp=0;
         for(int i=ans.size()-1; i>=0; i--)
              {
                temp+=ans[i];
                  if(temp==targetSum)
                  {
                      count++;
                  }
                  
              }
              
              
          ans.pop_back();
              
    }
};