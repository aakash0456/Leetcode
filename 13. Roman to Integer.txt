class Solution {
public:
    int romanToInt(string s) {
        
         unordered_map<char, int> table = { { 'I' , 1 },
                                   { 'V' , 5 },
                                   { 'X' , 10 },
                                   { 'L' , 50 },
                                   { 'C' , 100 },
                                   { 'D' , 500 },
                                   { 'M' , 1000 } };
        
        for(pair<char, int> no:table)
        {
          // cout<<no.first<<" "<<no.second<<endl;
        }
        
        
        int length =  s.length();
        int sum =0;
       //cout<<table['I'] ;
     
        for(int i=0; i<length; i++)
        {
            if(s[i]=='I' && s[i+1] == 'V' || 
               s[i]=='I' && s[i+1] == 'X' ||
               s[i]=='X' && s[i+1] == 'L' ||
               s[i]=='X' && s[i+1] == 'C' ||
               s[i]=='C' && s[i+1] == 'D' || s[i]=='C' && s[i+1] == 'M')
            {
               sum = sum + (table[s[i+1]] - table[s[i]]);
                i++;
                }
        
            else
            {
                sum = sum + table[s[i]];
            }
            
        }
        return sum;
        
    }
};